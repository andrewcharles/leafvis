{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"the",
				"thresholdotsu"
			],
			[
				"BAS",
				"BASE_POINTS"
			],
			[
				"BASE",
				"BASE_AREAS"
			],
			[
				"splitting",
				"SPLITTING_THRESHOLD"
			],
			[
				"mat",
				"matplotlib  (module)"
			],
			[
				"neigh",
				"neighbourFields"
			],
			[
				"neig",
				"neighbourFields"
			],
			[
				"adjace",
				"adjacentFields"
			],
			[
				"adj",
				"adjacentFields"
			],
			[
				"data",
				"datasetName"
			],
			[
				"metri",
				"metricName"
			],
			[
				"experi",
				"experimentName"
			],
			[
				"ex",
				"ext"
			],
			[
				"e",
				"experimentName"
			],
			[
				"FCST_",
				"FCST_EASTCOASTLOW"
			],
			[
				"err",
				"errorSpread"
			],
			[
				"av",
				"availableGrids"
			],
			[
				"conto",
				"contourIntersection"
			],
			[
				"point",
				"pointFile"
			],
			[
				"area",
				"areaFile"
			],
			[
				"minimu",
				"minimumIndex"
			],
			[
				"mini",
				"minimumIndex"
			],
			[
				"dist",
				"distances"
			],
			[
				"alig",
				"alignedTR"
			],
			[
				"L",
				"logBug  (variable)"
			],
			[
				"TAR",
				"TARGET_RADII"
			],
			[
				"SOURCE",
				"SOURCE_RADII"
			],
			[
				"S",
				"SOURCE  (variable)"
			],
			[
				"TC",
				"TCDeriveFeatures"
			],
			[
				"cycl",
				"cycloneSamples"
			],
			[
				"polic",
				"policyDB"
			],
			[
				"tar",
				"targetFunction"
			],
			[
				"targ",
				"target"
			],
			[
				"sourceFrom",
				"sourceFromPolicy"
			],
			[
				"source",
				"sourceFunction"
			],
			[
				"sour",
				"sourceFromWind"
			],
			[
				"cyclon",
				"cycloneCentre"
			],
			[
				"target",
				"targetFunction"
			],
			[
				"sou",
				"sourceFunction"
			],
			[
				"SOUR",
				"SOURCE_POLICY"
			],
			[
				"SOURCE_",
				"SOURCE_VORTICITY"
			],
			[
				"databa",
				"databaseA"
			],
			[
				"grid",
				"gridAccessor"
			],
			[
				"at",
				"attributes"
			],
			[
				"local",
				"localID"
			],
			[
				"yie",
				"yieldCyloneFeatures"
			],
			[
				"Grid",
				"GridTimeRange"
			],
			[
				"derive",
				"derivePolicyFeatures"
			],
			[
				"influce",
				"influenceRadius"
			],
			[
				"maximum",
				"maximumRadius"
			],
			[
				"between",
				"betweenLine"
			],
			[
				"betwee",
				"betweenLine"
			],
			[
				"Feature",
				"FeatureLayer"
			],
			[
				"Fea",
				"FeatureException"
			],
			[
				"ite",
				"iterGroups  (function)"
			],
			[
				"__",
				"__contains__  (function)"
			],
			[
				"feas",
				"features"
			],
			[
				"tim",
				"timeRanges"
			],
			[
				"vali",
				"validContainers"
			],
			[
				"expec",
				"expectedCentres"
			],
			[
				"disc",
				"discreteGrid"
			],
			[
				"dis",
				"discreteKeys"
			],
			[
				"inte",
				"interpolateFeatureContainers  (function)"
			],
			[
				"conti",
				"containerA"
			],
			[
				"mock",
				"mockAccessor"
			],
			[
				"exp",
				"expectedRadii"
			],
			[
				"feat",
				"feature"
			],
			[
				"Feua",
				"FeatureLayer"
			],
			[
				"feature",
				"featureB"
			],
			[
				"mod",
				"modelFileIngest	(global, function)"
			],
			[
				"model",
				"model"
			],
			[
				"strip",
				"strippedFile	(local, instance)"
			],
			[
				"asser",
				"assertAlmostEqual"
			],
			[
				"Inter",
				"InterpolationError	(global, class)"
			],
			[
				"Inte",
				"InterpolationError	(global, class)"
			],
			[
				"Fe",
				"FeaturesInterpolation	(global, class)"
			],
			[
				"getGr",
				"getGridLoc	(attribute, function)"
			],
			[
				"timeR",
				"timeRange"
			],
			[
				"tr",
				"trListSpan	(imported, function)"
			],
			[
				"fea",
				"features"
			],
			[
				"extr",
				"extractFixesFromKeys	(imported, function)"
			],
			[
				"Cycl",
				"CycloneUtils	(imported, module)"
			],
			[
				"Featu",
				"FeatureLayer	(imported, module)"
			],
			[
				"discret",
				"discreteParser	(global, function)"
			],
			[
				"Inf",
				"Inlfuence	(global, class)"
			],
			[
				"Fa",
				"Feature	(global, class)"
			],
			[
				"is",
				"isinstance	(builtin, function)"
			],
			[
				"cyc",
				"cycloneCentre	(local, instance)"
			],
			[
				"Non",
				"NotImplementedError	(builtin, class)"
			],
			[
				"input",
				"inputGrid	(local, instance)"
			],
			[
				"ones",
				"ones_like"
			],
			[
				"Varia",
				"variableElement"
			],
			[
				"Gri",
				"GridTimeRange	(local, instance)"
			],
			[
				"yi",
				"yieldMotionAndMask	(global, function)"
			],
			[
				"motion",
				"motionMag"
			],
			[
				"expA",
				"expArgs	(local, instance)"
			],
			[
				"ad",
				"advectGrid	(global, function)"
			],
			[
				"cente",
				"centreLatLon	(local, instance)"
			],
			[
				"mo",
				"mockAccessor	(local, instance)"
			],
			[
				"centre",
				"centreLatLon	(local, instance)"
			],
			[
				"cyclone",
				"cycloneWind	(global, function)"
			],
			[
				"max",
				"maxWind	(local, instance)"
			],
			[
				"sp",
				"speedsAndRadii	(local, instance)"
			],
			[
				"tra",
				"traceContours"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"tas",
				"Tasks: New document"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Discover Packages"
			],
			[
				"pack",
				"Package Control: Discover Packages"
			],
			[
				"key",
				"Preferences: Key Bindings - Default"
			],
			[
				"pakca",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pakace",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"rop",
				"Rope: New Project"
			],
			[
				"Pack",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"packainsta",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"tri",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"tra",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"trail",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"tr",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"git",
				"Git: Diff Tool"
			],
			[
				"",
				"Git: Graph All"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"oacka",
				"Package Control: Install Package"
			],
			[
				"disco",
				"Package Control: Discover Packages"
			],
			[
				"dis",
				"Package Control: Discover Packages"
			],
			[
				"g",
				"Package Control: List Packages"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 466.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/nfaggian/Desktop/development/leafvis/README.md",
		"/Users/nfaggian/Desktop/development/leafvis/setup.py",
		"/Users/nfaggian/Desktop/development/javascript/setup.py",
		"/Users/nfaggian/Desktop/development/growcut/README.md",
		"/Users/nfaggian/Desktop/development/imreg/README.md",
		"/Users/nfaggian/Desktop/development/javascript/.travis.yml",
		"/Users/nfaggian/Desktop/development/javascript/wms.py",
		"/Users/nfaggian/Desktop/development/javascript/sampler.py",
		"/Users/nfaggian/Desktop/development/javascript/render.py",
		"/Users/nfaggian/Desktop/development/javascript/store.py",
		"/Users/nfaggian/Desktop/development/growcut/growcut/tests/test_growcut.py",
		"/Users/nfaggian/Desktop/development/qnh/qnh/solver.py",
		"/Users/nfaggian/Desktop/python/bankant-engine/bankantengine/tesseract/classifier.pyx",
		"/Users/nfaggian/Desktop/python/bankant-engine/bankantengine/tesseract/tesseract.cpp",
		"/Users/nfaggian/Desktop/python/qnh/qnh/solver.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/product.py",
		"/Users/nfaggian/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/nfaggian/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/nfaggian/Desktop/python/qnh/qnh/logger.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/splitting.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/qnh.ini",
		"/Users/nfaggian/Desktop/python/qnh/qnh/tracing.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/tests/test_tracer.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/zones.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/optimized.pyx",
		"/Users/nfaggian/Desktop/python/qnh/qnh/tests/test_splitting.py",
		"/Users/nfaggian/Desktop/python/metex/metex/projection.py",
		"/Users/nfaggian/Desktop/python/qnh/qnh/containers.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/solver.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/containers.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/tracing.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/product.py",
		"/work/nfaggian/GIT-Mirrors/qnh/setup.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/config.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/zones.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/plot.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/projection.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/data/gfe_qnh_areas.dbf",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/data/gfe_av_point_places.shx",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/splitting.py",
		"/work/nfaggian/GIT-Mirrors/qnh/experiments/tasks.py",
		"/work/nfaggian/GIT-Mirrors/qnh/experiments/plotting.py",
		"/work/nfaggian/GIT-Mirrors/qnh/experiments/database.py",
		"/work/nfaggian/GIT-Mirrors/qnh/experiments/server.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/logger.py",
		"/work/nfaggian/GIT-Mirrors/qnh/requirements.txt",
		"/work/nfaggian/GIT-Mirrors/qnh/experiments/test.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/shaper.py",
		"/work/nfaggian/GIT-Mirrors/qnh/tests/test_projection.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/config/qnh.json",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/config/data.json",
		"/work/nfaggian/GIT-Mirrors/qnh/experiments/data.py",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/optimized.c",
		"/work/nfaggian/GIT-Mirrors/qnh/qnh/optimized.pyx",
		"/work/nfaggian/GIT-Mirrors/qnh/tests/test_solver.py",
		"/work/nfaggian/GIT-Mirrors/qnh/tests/test_splitting.py",
		"/work/nfaggian/GIT-Mirrors/qnh/tests/test_tracing.py",
		"/work/nfaggian/GIT-Mirrors/qnh/data_geotiff.py",
		"/work/nfaggian/GIT-Mirrors/qnh/data.py",
		"/home/accounts/nfaggian/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/work/nfaggian/GIT-Mirrors/qnh/tasks.py",
		"/work/nfaggian/GIT-Mirrors/qnh/bento.info",
		"/work/nfaggian/GIT-Mirrors/qnh/data/database.json",
		"/work/nfaggian/GIT-Mirrors/qnh/test.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/mk/Rules.mk",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/gfe.sublime-workspace",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/AsymmetricVortexBuilder.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/smartTools/test_OnshoreFlow.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/conftest.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/__init__.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/fabfile.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/.reviewboardrc",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/smartTools/test_TCDeriveFeatures.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/smartTools/TCDeriveFeatures.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/procedures/test_TCInterpolateFeatures.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/smartTools/FeatureEdit.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/smartTools/Advect.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/Advector.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/KIND:Aviation.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/TCInterpolateFeatures.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/KIND:PublicWx.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/SITE:WARO.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/formatters/textProducts/AreaQNH.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/ForecastProcess.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/FireWxElements.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/FireWxExtraElements.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/PipeLine.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/TYPE:DEV.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/TYPE:LIVE.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/SITE:NSWRO.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/libs/pyInter/NeoConfig.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/TYPE:PROD.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/SITE:VICRO.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/libs/pyInter/FeatureLayer.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/BezierBuilder.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/ExponentialPoPs.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/config/common/CONFIG/COMMON:ALL:ifpServer.databases.CONFIG",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/procedures/test_TCIngestTrack.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/procedures/test_TCMatchPolicy.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/smartTools/test_Advect.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/smartTools/AreaQNHEdit.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/SmartScript.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/StandardScratchGrids.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/libs/ToolTester.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/procedures/test_StandardScratchGrids.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/combined/AreaQNHData.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/QNHutils.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/QNHconfig.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/smartTools/test_AreaQNHEdit.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/TimeShrek.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/AutoForecast.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/LoadStandardGuidance.py",
		"/home/ho/rcds/nfaggian/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/libs/pyInter/GridAccessor.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/libs/PrecipGrids.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/libs/DBSWrapper.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/gridTools/smartTools/test_DeriveProbSnow.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/smartTools/DeriveProbSnow.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/system/combined/test_AreaQNHForecast.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/formatters/headline/TextFormatter.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/libs/pyInter/DatabaseID.i",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/qtgfe/ui/dialogs/SelectionDialog.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/libs/CycloneUtils.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/libs/GridCreator.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/libs/pyInter/EditActionMgr.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/ShowGuidance.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/src/gridTools/procedures/ShowOnshoreFlow.py",
		"/work/nfaggian/GIT-Mirrors/svn/GFESuite/tests/libs/TimeOperations.py"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"",
			"src/gridTools",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"script",
			"unicode",
			"StringIO",
			"optimized",
			"spreadCons",
			"split(",
			"split",
			"traceContours",
			"config[",
			"grid",
			"config.get",
			"Config",
			"config",
			"SPLITTING_THRESHOLD",
			"config[",
			"config",
			"config[",
			"config",
			".lat",
			"config",
			"gridToMap",
			"field",
			"complexity",
			"([",
			"dataset",
			"contourIntersection",
			" :",
			"  :",
			" ",
			"\n",
			"        \n",
			"config",
			"Areas(",
			"extent",
			"upper",
			"  ret",
			"origin",
			"upper",
			"database",
			"ndimage",
			"print",
			"def interpolateFeatureContainers(gridAccessor, timeRange):",
			"appropriate",
			"print",
			"DailyPop",
			"LogStream",
			"getTime",
			"displacedReal",
			"getParmAccessor",
			"\"database\"",
			"filteredDBs",
			"filterDBs",
			"filter database",
			"filterD",
			"'filterD",
			"'filterD.*",
			"filterdb",
			"filterDBS",
			"'label'",
			"'database'",
			"'today'",
			"db=",
			"dbid=",
			"abstractmethod",
			"dbid=",
			"'databases'",
			"_buildAlignmentChecks",
			"_checkAlignment",
			"execute",
			"eva",
			"import FeatureLayer",
			"30-32",
			"latestAndPreviousBaseTimes",
			"'DailyPrecip'",
			"projection",
			"\"GFDI\"",
			"\"\n",
			"\"GFDI\"",
			"\"FFDI\"",
			"FDI",
			"ColorTable",
			"SITEID",
			"SITE",
			")",
			"(",
			"makeParm",
			"saveAll",
			"saveAkk",
			"savePa",
			"saveParms",
			"dbs",
			"almostEqual",
			"Circle",
			"()",
			"advectTool",
			"DeriveMFDI",
			"gridCreator",
			"AFPS",
			"array",
			"advectTool",
			"/work/nfaggian/GIT-Mirrors/svn/GFESuite/",
			"fab",
			"_getGrid",
			"nonzero",
			"\\\"nonzero\\\"",
			"\"nonzero\"",
			"cout",
			"cout <<\ncout \\<\\<",
			"InconsistencyChecks",
			"InconsistencyChecksx",
			"elementAndLevelFromWEname",
			"_scratchDefinitions",
			"config[",
			"fround",
			"precision",
			")\n",
			"createGrid",
			"show",
			"Show",
			"show",
			"Show",
			"show",
			"whitespace",
			"collections",
			"pairWise",
			"FDI_",
			"30-32",
			"TCEnvelope"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"FFDI\"",
			"],",
			"[",
			" ",
			"imreg."
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 33.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 65.0
	},
	"output.find_results":
	{
		"height": 237.0
	},
	"output.sbt":
	{
		"height": 0.0
	},
	"output.sbt_error":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 102.0
	},
	"project": "/Users/nfaggian/Desktop/development/leafvis/leafvis.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"tracer",
				"qnh/qnh/tests/test_tracer.py"
			],
			[
				"c",
				"qnh/containers.py"
			],
			[
				"zone",
				"qnh/zones.py"
			],
			[
				"splitt",
				"qnh/splitting.py"
			],
			[
				"solver",
				"qnh/solver.py"
			],
			[
				"pro",
				"qnh/product.py"
			],
			[
				"proj",
				"qnh/projection.py"
			],
			[
				"cont",
				"qnh/containers.py"
			],
			[
				"trac",
				"qnh/tracing.py"
			],
			[
				"spl",
				"qnh/splitting.py"
			],
			[
				"set",
				"setup.py"
			],
			[
				"tracing",
				"qnh/tracing.py"
			],
			[
				"splitting",
				"qnh/splitting.py"
			],
			[
				"contai",
				"qnh/containers.py"
			],
			[
				"shape",
				"qnh/shaper.py"
			],
			[
				"pip",
				"src/gridTools/libs/PipeLine.py"
			],
			[
				"firewxex",
				"src/gridTools/procedures/FireWxExtraElements.py"
			],
			[
				"firewxelem",
				"src/gridTools/procedures/FireWxElements.py"
			],
			[
				"foreca",
				"src/gridTools/libs/ForecastProcess.py"
			],
			[
				"areaqnh",
				"src/formatters/textProducts/AreaQNH.py"
			],
			[
				"feature",
				"src/gridTools/smartTools/FeatureEdit.py"
			],
			[
				"tci",
				"src/gridTools/procedures/TCInterpolateFeatures.py"
			],
			[
				"neoc",
				"src/libs/pyInter/NeoConfig.py"
			],
			[
				"advector",
				"src/gridTools/procedures/Advector.py"
			],
			[
				"advec",
				"src/gridTools/smartTools/Advect.py"
			],
			[
				"tcin",
				"src/gridTools/procedures/TCInterpolateFeatures.py"
			],
			[
				"featurel",
				"src/libs/pyInter/FeatureLayer.py"
			],
			[
				"tcinte",
				"src/gridTools/procedures/TCInterpolateFeatures.py"
			],
			[
				"test_tci",
				"tests/system/gridTools/procedures/test_TCInterpolateFeatures.py"
			],
			[
				"test_tcmat",
				"tests/system/gridTools/procedures/test_TCMatchPolicy.py"
			],
			[
				"test_ingest",
				"tests/system/gridTools/procedures/test_TCIngestTrack.py"
			],
			[
				"test_tcder",
				"tests/system/gridTools/smartTools/test_TCDeriveFeatures.py"
			],
			[
				"test_ad",
				"tests/system/gridTools/smartTools/test_Advect.py"
			],
			[
				"areaqnhed",
				"src/gridTools/smartTools/AreaQNHEdit.py"
			],
			[
				"test_scrat",
				"tests/system/gridTools/procedures/test_StandardScratchGrids.py"
			],
			[
				"smartsc",
				"src/gridTools/libs/SmartScript.py"
			],
			[
				"standa",
				"src/gridTools/procedures/StandardScratchGrids.py"
			],
			[
				"toolte",
				"tests/libs/ToolTester.py"
			],
			[
				"test_stan",
				"tests/system/gridTools/procedures/test_StandardScratchGrids.py"
			],
			[
				"qnhcon",
				"src/gridTools/libs/QNHconfig.py"
			],
			[
				"qnhu",
				"src/gridTools/libs/QNHutils.py"
			],
			[
				"areaqnhd",
				"tests/system/combined/AreaQNHData.py"
			],
			[
				"featurela",
				"src/libs/pyInter/FeatureLayer.py"
			],
			[
				"timeshe",
				"src/gridTools/procedures/TimeShrek.py"
			],
			[
				"autofore",
				"src/gridTools/procedures/AutoForecast.py"
			],
			[
				"loads",
				"src/gridTools/procedures/LoadStandardGuidance.py"
			],
			[
				"standar",
				"src/gridTools/procedures/StandardScratchGrids.py"
			],
			[
				"stan",
				"src/gridTools/procedures/StandardScratchGrids.py"
			],
			[
				"featuree",
				"src/gridTools/smartTools/FeatureEdit.py"
			],
			[
				"prec",
				"tests/libs/PrecipGrids.py"
			],
			[
				"dbswa",
				"tests/libs/DBSWrapper.py"
			],
			[
				"tooltest",
				"tests/libs/ToolTester.py"
			],
			[
				"test_derivepro",
				"tests/system/gridTools/smartTools/test_DeriveProbSnow.py"
			],
			[
				"derivepro",
				"src/gridTools/smartTools/DeriveProbSnow.py"
			],
			[
				"tcder",
				"src/gridTools/smartTools/TCDeriveFeatures.py"
			],
			[
				"featureed",
				"src/gridTools/smartTools/FeatureEdit.py"
			],
			[
				"databa",
				"src/libs/pyInter/DatabaseID.i"
			],
			[
				"grida",
				"src/libs/pyInter/GridAccessor.py"
			],
			[
				"gridacce",
				"src/libs/pyInter/GridAccessor.py"
			],
			[
				"databas",
				"src/libs/pyInter/DatabaseID.i"
			],
			[
				"gridcrea",
				"tests/libs/GridCreator.py"
			],
			[
				"feat",
				"src/libs/pyInter/FeatureLayer.py"
			],
			[
				"gridac",
				"src/libs/pyInter/GridAccessor.py"
			],
			[
				"gridacc",
				"src/libs/pyInter/GridAccessor.py"
			],
			[
				"cyc",
				"src/gridTools/libs/CycloneUtils.py"
			],
			[
				"database",
				"src/libs/pyInter/DatabaseID.i"
			],
			[
				"show",
				"src/gridTools/procedures/ShowGuidance.py"
			],
			[
				"timeoper",
				"tests/libs/TimeOperations.py"
			],
			[
				"selecttr",
				"src/libs/client/dataMgr/SelectTRMgr.C"
			],
			[
				"test_mock",
				"tests/unit/test_MockAccessor.py"
			],
			[
				"test_grid",
				"tests/unit/test_GridCreator.py"
			],
			[
				"test_cacl",
				"tests/system/gridTools/procedures/test_CalculateFetches.py"
			],
			[
				"reass",
				"src/gridTools/smartTools/ReassignCategories.py"
			],
			[
				"test_tcd",
				"tests/system/gridTools/smartTools/test_TCDeriveFeatures.py"
			],
			[
				"test_feat",
				"tests/system/gridTools/smartTools/test_FeatureEdit.py"
			],
			[
				"test_road",
				"tests/system/gridTools/procedures/test_RoadWxHazards.py"
			],
			[
				"test_reass",
				"tests/system/gridTools/smartTools/test_ReassignCategories.py"
			],
			[
				"chec",
				"src/gridTools/procedures/CheckGrids.py"
			],
			[
				"conftest",
				"tests/conftest.py"
			],
			[
				"check",
				"src/gridTools/procedures/CheckGrids.py"
			],
			[
				"test_fea",
				"tests/system/gridTools/smartTools/test_FeatureEdit.py"
			],
			[
				"tcint",
				"src/gridTools/procedures/TCInterpolateFeatures.py"
			],
			[
				"test_interpol",
				"tests/system/gridTools/procedures/test_TCInterpolateFeatures.py"
			],
			[
				"discreteutil",
				"src/libs/pyInter/DiscreteUtils.py"
			],
			[
				"marineha",
				"src/gridTools/procedures/MarineHazards.py"
			],
			[
				"test_featu",
				"tests/system/gridTools/smartTools/test_FeatureEdit.py"
			],
			[
				"spat",
				"src/gridTools/libs/SpatialOperators.py"
			],
			[
				"tcd",
				"src/gridTools/smartTools/TCDeriveFeatures.py"
			],
			[
				"test_app",
				"tests/system/gridTools/smartTools/test_ApplyChange.py"
			],
			[
				"test_featurel",
				"tests/system/libs/pyInter/test_FeatureLayer.py"
			],
			[
				"test_areaman",
				"tests/unit/libs/pyInter/test_AreaManager.py"
			],
			[
				"areamana",
				"src/libs/pyInter/AreaManager.py"
			],
			[
				"smart",
				"src/gridTools/libs/SmartScript.py"
			],
			[
				"test_derivefea",
				"tests/system/gridTools/smartTools/test_TCDeriveFeatures.py"
			],
			[
				"seabree",
				"src/gridTools/procedures/SeaBreeze.py"
			],
			[
				"test_seab",
				"tests/system/gridTools/smartTools/test_SeaBreeze.py"
			],
			[
				"test_firewxutil",
				"tests/unit/formatters/test_FireWxUtils.py"
			],
			[
				"firewxutils",
				"src/formatters/libs/FireWxUtils.py"
			],
			[
				"test_areaqnhe",
				"tests/system/gridTools/smartTools/test_AreaQNHEdit.py"
			],
			[
				"test_areaqnhsp",
				"tests/system/gridTools/smartTools/test_AreaQNHSplit.py"
			],
			[
				"test_area",
				"tests/system/formatters/test_AreaQNH.py"
			],
			[
				"test_featurela",
				"tests/system/libs/pyInter/test_FeatureLayer.py"
			],
			[
				"test_load",
				"tests/system/gridTools/procedures/test_LoadStandardGuidance.py"
			],
			[
				"loadst",
				"src/gridTools/procedures/LoadStandardGuidance.py"
			],
			[
				"advection",
				"src/gridTools/libs/Advection.py"
			],
			[
				"combinedarea",
				"tests/system/combined/test_AreaQNHForecast.py"
			],
			[
				"test_areaqnh",
				"tests/system/formatters/test_AreaQNH.py"
			],
			[
				"gfec",
				"config/common/GFECONFIG/gfeConfig.GFECONFIG"
			],
			[
				"load",
				"tools/loadGuidance.py"
			],
			[
				"gridacces",
				"src/libs/pyInter/GridAccessor.py"
			],
			[
				"timerangeut",
				"src/formatters/libs/TimeRangeUtils.py"
			],
			[
				"gfetime",
				"src/libs/pyInter/gfeTime.py"
			],
			[
				"seab",
				"src/gridTools/procedures/SeaBreeze.py"
			],
			[
				"coltab",
				"src/gridTools/libs/ColTabAlg.py"
			],
			[
				"times",
				"src/gridTools/procedures/TimeShrek.py"
			],
			[
				"timeshre",
				"src/gridTools/procedures/TimeShrek.py"
			],
			[
				"test_firewx",
				"tests/system/gridTools/procedures/test_FireWx.py"
			],
			[
				"test_bush",
				"tests/system/gridTools/procedures/test_BushWalkersHazards.py"
			],
			[
				"dbsw",
				"tests/libs/DBSWrapper.py"
			],
			[
				"tcinter",
				"src/gridTools/procedures/TCInterpolateFeatures.py"
			],
			[
				"tcfeature",
				"src/gridTools/procedures/TCInterpolateFeatures.py"
			],
			[
				"derivemfd",
				"src/gridTools/smartTools/DeriveMFDI.py"
			],
			[
				"test",
				"tests/unit/test_offsetTime.py"
			],
			[
				"precip",
				"tests/libs/PrecipGrids.py"
			],
			[
				"test_derive",
				"tests/system/gridTools/smartTools/test_DeriveMFDI.py"
			],
			[
				"derivemf",
				"src/gridTools/smartTools/DeriveMFDI.py"
			],
			[
				"input",
				"src/gridTools/smartTools/InputByArea.py"
			],
			[
				"loadg",
				"tools/loadGuidance.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/Users/nfaggian/Desktop/python/imreg/imreg.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
